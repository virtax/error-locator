<%= ActionDispatch::ShowExceptions.rescue_responses %>
<%
  traces = [
    ["Application Trace", @application_trace],
    ["Framework Trace", @framework_trace],
    ["Full Trace", @full_trace]
  ]
  names = traces.collect {|name, trace| name}
%>

<p><code>Rails.root: <%= defined?(Rails) && Rails.respond_to?(:root) ? Rails.root : "unset" %></code></p>
<div id="traces">
  <% names.each do |name| %>
    <%
      show = "document.getElementById('#{name.gsub(/\s/, '-')}').style.display='block';"
      hide = (names - [name]).collect {|hide_name| "document.getElementById('#{hide_name.gsub(/\s/, '-')}').style.display='none';"}
    %>
    <a href="#" onclick="<%= hide.join %><%= show %>; return false;"><%= name %></a> <%= '|' unless names.last == name %>
  <% end %>

  <% traces.each do |name, trace| %>
    <div id="<%= name.gsub(/\s/, '-') %>" style="display: <%= (name == "Application Trace") ? 'block' : 'none' %>;">
      <pre><% trace.each { |s| %><code><%=h s+"\n"%></code><% } %></pre>
    </div>
  <% end %>
</div>

<script src="/assets/jquery.js?body=1" type="text/javascript"></script>
<script>
  $("code").click(function() {
    $.ajax({
        type: 'POST',
        url: '/error-locator',
        data: { line: $(this).text() }
    });
  });

</script>